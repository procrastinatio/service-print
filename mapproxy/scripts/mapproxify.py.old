# -*- coding: utf-8 -*-
"""
mapproxyfy.py

"""

import os, sys, codecs


from mako.template import Template
from mako.lookup import TemplateLookup
from mako.runtime import Context
from StringIO import StringIO

mylookup = TemplateLookup(directories=['/home/ltmom/mf-chsdi3/mapproxy/templates'], module_directory='/tmp/mako_modules')

def serve_template(templatename, ctx):
    mytemplate = mylookup.get_template(templatename)
    #print mytemplate.render(**kwargs)
                
    #print ctx.keys()
    mytemplate.render_context(ctx)


try:
    import psycopg2
    import psycopg2.extras
    from psycopg2.extensions import register_type, UNICODE, connection
except ImportError:
    print 'You need psycopg2 to run this script. Try to install it with \'easy_install psycopg2\''
    sys.exit()


try:
   conn=psycopg2.connect(os.environ['dsn'])
   print 'Database connection established'
except:
   print 'Critical Error: Unable to connect to the database. Exit'
   sys.exit()

register_type(UNICODE)
conn.set_client_encoding('UTF8')

cur = conn.cursor(cursor_factory=psycopg2.extras.RealDictCursor)
cur.execute('select * from re3.view_layers_js')
rows = cur.fetchall()
for row in rows:
    if row['layertype'] == 'wmts':
        print row

data = {'layers': rows}
buf = StringIO()
ctx = Context(buf,**data)

print ctx.keys()

serve_template('mapproxy.yaml.mako', ctx)
html = buf.getvalue().encode('utf-8')

print html

